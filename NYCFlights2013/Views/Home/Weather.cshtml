@{
	ViewData["Title"] = "Weather Page";
	@model NYCFlights2013.Models.Weather
	var weather = (List<Weather>)ViewData["weather"];
	int globalCounter = 0;
	var temp_attribute_celcius = (List<Weather>)ViewData["temp_attribute_celcius"];
	string[] ChartHeadersWeather = new string[] {
	"Year",
	"Month",
	"Day",
	"Departure Time",
	"Departure Delay",
	"Arrival Time",
	"Arrival Delay",
	"Carrier",
	"Tail Number",
	"Flight",
	"Origin",
	"Destination",
	"Air Time",
	"Distance",
	"Hour",
	"Minute"};          //TODO: Use appropriate fields.


	Console.WriteLine(@temp_attribute_celcius[3366].month_letters); // 3366 returns May
}


<!DOCTYPE HTML>
<html>
<head>
	<script type="text/javascript">

		window.onload = function () {

			var chart = new CanvasJS.Chart("chartContainer", {
				animationEnabled: true,
				zoomEnabled: true,
				title: {
					text: "Temperatures from origins EWR, JFK, LGA"
				},
				axisX: {
					gridThickness: 1,
					title: "Month of Year"
				},
				axisY: {
					gridThickness: 1,
					title: "Temperature in Celcius",
				},
				data: [{
					type: "scatter",
					toolTipContent: "<b>Month: </b>{label} <br/><b>Temperature: </b>{y}°C",
					dataPoints: [
						// Example data extracted from database. Need to update later.
						// X Axis depends on the extracted date.
						{ x: new Date(2013, 1, 1), y: @temp_attribute_celcius[0].temp, label: "@{@temp_attribute_celcius[0].month_letters}" },
						{ x: new Date(2013, 1, 1), y: @temp_attribute_celcius[1].temp, label: "@{@temp_attribute_celcius[1].month_letters}" },
						{ x: new Date(2013, 1, 1), y: @temp_attribute_celcius[2].temp, label: "@{@temp_attribute_celcius[2].month_letters}" },
						{ x: new Date(2013, 5, 1), y: @temp_attribute_celcius[3366].temp, label: "@{@temp_attribute_celcius[3366].month_letters}" },
						{ x: new Date(2013, 8, 13), y: @temp_attribute_celcius[5555].temp, label: "@{@temp_attribute_celcius[5555].month_letters}" },
						{ x: new Date(2013, 10, 1), y: @temp_attribute_celcius[6755].temp, label: "@{@temp_attribute_celcius[6755].month_letters}" },
						{ x: new Date(2013, 6, 1), y: @temp_attribute_celcius[12444].temp, label: "@{@temp_attribute_celcius[12444].month_letters}" },
						{ x: new Date(2013, 12, 1), y: @temp_attribute_celcius[16888].temp, label: "@{@temp_attribute_celcius[16888].month_letters}" },
						{ x: new Date(2013, 3, 1), y: @temp_attribute_celcius[18888].temp, label: "@{@temp_attribute_celcius[18888].month_letters}" }
					]
						// Might need to convert String date to Integer date for the above to work when being fed data.
				}]
			});


			@*foreach (var temp in temp_attribute_celcius)
				{
				<script>
				chart.options.data[@globalCounter].dataPoints.push({
				x: @globalCounter,
				y: @temp_attribute_celcius[@globalCounter].temp,
				label: @temp_attribute_celcius[@globalCounter].month_letters})
				chart.render();
				</script>
				globalCounter += 1;
				Console.WriteLine(@temp_attribute_celcius[@globalCounter].temp);

				}
				}*@




	chart.render();

	}

	</script>
	<script type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
</head>
<body>
	<div id="chartContainer" style="height: 300px; width: 100%;"></div>
</body>
</html>
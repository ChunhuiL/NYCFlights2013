@{
	ViewData["Title"] = "Weather Page";
	@model NYCFlights2013.Models.Weather
	var weather = (List<Weather>)ViewData["weather"];
	int globalCounter = 6730; // How many rows to extract
	var temp_attribute_celcius = (List<Weather>)ViewData["temp_attribute_celcius"];
	string[] ChartHeadersWeather = new string[] {
	"Year",
	"Month",
	"Day",
	"Departure Time",
	"Departure Delay",
	"Arrival Time",
	"Arrival Delay",
	"Carrier",
	"Tail Number",
	"Flight",
	"Origin",
	"Destination",
	"Air Time",
	"Distance",
	"Hour",
	"Minute"};          //TODO: Use appropriate fields.


	string dps_full = "";
	for (int i = 0; i <= globalCounter; i++)
	{

		string dps = "{x: new Date(2011, 9, 9), y: 22},"
			.Replace("2011", "2013") //temp_attribute_celcius[i].year
			.Replace("9,", (Int32.Parse(temp_attribute_celcius[i].month) - 1).ToString() + ",")
			.Replace("9", temp_attribute_celcius[i].day)
			.Replace("22", temp_attribute_celcius[i].temp);

		if (i == globalCounter)
		{
			dps = dps.Remove(dps.Length - 1);
			dps = dps.Insert(dps.Length, "]");
		}

		dps_full += dps;
	}
	string dps_entire = dps_full;

	Console.WriteLine(@temp_attribute_celcius[3366].month_letters); // 3366 returns May
	Console.WriteLine(@temp_attribute_celcius[3366].year); // 3366 returns 2013

	}


<!DOCTYPE HTML>
<html>
<head>
	<script type="text/javascript">

		window.onload = function () {
			var data_xAxis = [
				{ x: new Date(2013, 1, 1), y: null, label: "Jan 2013" },
				{ x: new Date(2013, 2, 1), y: null, label: "Feb 2013" },
				{ x: new Date(2013, 3, 1), y: null, label: "Mar 2013" },
				{ x: new Date(2013, 4, 1), y: null, label: "Apr 2013" },
				{ x: new Date(2013, 5, 1), y: null, label: "May 2013" },
				{ x: new Date(2013, 6, 1), y: null, label: "Jun 2013" },
				{ x: new Date(2013, 7, 1), y: null, label: "Jul 2013" },
				{ x: new Date(2013, 8, 1), y: null, label: "Aug 2013" },
				{ x: new Date(2013, 9, 1), y: null, label: "Sep 2013" },
				{ x: new Date(2013, 10, 1), y: null, label: "Oct 2013" },
				{ x: new Date(2013, 11, 1), y: null, label: "Nov 2013" },
				{ x: new Date(2013, 12, 1), y: null, label: "Dec 2013" }, 
				@dps_full;
			var chart = new CanvasJS.Chart("chartContainer", {
				animationEnabled: true,
				zoomEnabled: true,
				title: {
					text: "Temperatures from origins EWR, JFK, LGA"
				},
				axisX: {
					gridThickness: 1,
					title: "Month of Year",
					labelFormatter: function (e) {
			return CanvasJS.formatDate(e.value, "MMM YYYY");
		}
	},
				axisY: {
		gridThickness: 1,
					title: "Temperature in Celcius",
				},
				data: [{
		type: "scatter",
					toolTipContent: "<b>Date: </b>{x} <br/><b>Temperature: </b>{y}°C",
					xValueType: "dateTime",
					dataPoints: data_xAxis
						// Might need to convert String date to Integer date for the above to work when being fed data.
	}]
			});


			@*foreach (var temp in temp_attribute_celcius)
				{
				<script>
				chart.options.data[@globalCounter].dataPoints.push({
				x: @globalCounter,
				y: @temp_attribute_celcius[@globalCounter].temp,
				label: @temp_attribute_celcius[@globalCounter].month_letters})
				chart.render();
				</script>
				globalCounter += 1;
				Console.WriteLine(@temp_attribute_celcius[@globalCounter].temp);

				}
				}*@




	chart.render();

	}

	</script>
	<script type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
</head>
<body>
	<div id="chartContainer" style="height: 300px; width: 100%;"></div>
</body>
</html>
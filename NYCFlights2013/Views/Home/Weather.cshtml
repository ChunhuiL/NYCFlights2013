@{
	ViewData["Title"] = "Weather Page";
	@model NYCFlights2013.Models.Weather
	var weather = (List<Weather>)ViewData["weather"];
	int globalCounter = 10000; // How many rows to extract
	var temp_attribute_celcius = (List<Weather>)ViewData["temp_attribute_celcius"];
	string[] ChartHeadersWeather = new string[] {
	"Year",
	"Month",
	"Day",
	"Departure Time",
	"Departure Delay",
	"Arrival Time",
	"Arrival Delay",
	"Carrier",
	"Tail Number",
	"Flight",
	"Origin",
	"Destination",
	"Air Time",
	"Distance",
	"Hour",
	"Minute"};          //TODO: Use appropriate fields.


	string dps_full = "";
	for (int i = 6730; i <= globalCounter; i++)
	{

		string dps = "{x: new Date(2011, 9, 9), y: 22},"
			.Replace("2011", temp_attribute_celcius[i].year)
			.Replace("9,", (Int32.Parse(temp_attribute_celcius[i].month) - 1).ToString() + ",")
			.Replace("9", temp_attribute_celcius[i].day)
			.Replace("22", temp_attribute_celcius[i].temp);

		if (i == globalCounter)
		{
			dps = dps.Remove(dps.Length - 1);
			dps = dps.Insert(dps.Length, "]");
		}

		dps_full += dps;
	}
	string dps_entire = dps_full;

	Console.WriteLine(@temp_attribute_celcius[3366].month_letters); // 3366 returns May
	Console.WriteLine(@temp_attribute_celcius[3366].year); // 3366 returns 2013

}

<script>
	window.onload = function () {

		Highcharts.chart('container', {
			chart: {
				type: 'scatter',
				zoomType: 'xy'
			},
			title: {
				text: 'Temperatures from origins EWR, JFK, LGA'
			},
			subtitle: {
				text: 'Source: Heinz  2003'
			},
			xAxis: {
				title: {
					enabled: true,
					text: 'Month of Year'
				},
				startOnTick: true,
				endOnTick: true,
				showLastLabel: true
			},
			yAxis: {
				title: {
					text: 'Temperature in Celcius'
				}
			},
			legend: {
				layout: 'vertical',
				align: 'left',
				verticalAlign: 'top',
				x: 100,
				y: 70,
				floating: true,
				backgroundColor: Highcharts.defaultOptions.chart.backgroundColor,
				borderWidth: 1
			},
			plotOptions: {
				scatter: {
					marker: {
						radius: 5,
						states: {
							hover: {
								enabled: true,
								lineColor: 'rgb(100,100,100)'
							}
						}
					},
					states: {
						hover: {
							marker: {
								enabled: false
							}
						}
					},
					tooltip: {
						headerFormat: '<b>{series.name}</b><br>',
						pointFormat: '{point.x} cm, {point.y} kg'
					}
				}
			},
			series: [{
				name: 'Female',
				color: 'rgba(223, 83, 83, .5)',
				data: [["Jan 2013", 51.6]]

			}, {
					name: 'Male',
				color: 'rgba(119, 152, 191, .5)',
					data: [["Feb 2013", 22.2], ["Mar 2013", 71.8]]
				}],
			plugins: [{
					beforeInit: function (chart) {
						var time = chart.options.scales.xAxes[0].time, // 'time' object reference
							timeDiff = moment(time.max).diff(moment(time.min), 'd'); // difference (in days) between min and max date
						// populate 'labels' array
						// (create a date string for each date between min and max, inclusive)
						for (i = 0; i <= timeDiff; i++) {
							var _label = moment(time.min).add(i, 'd').format('YYYY-MM-DD HH:mm:ss');
							chart.data.labels.push(_label);
						}
					}
				}]
		});
	}
</script>

<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>

<figure class="highcharts-figure">
	<div id="container"></div>
	<p class="highcharts-description">
		Scatter charts are often used to visualize the relationships
		between data in two dimensions. This chart is visualizing
		height and weight by gender, showing a clear trend where men
		are on average taller and heavier than women.
	</p>
</figure>

<style>
	.highcharts-figure, .highcharts-data-table table {
		min-width: 360px;
		max-width: 800px;
		margin: 1em auto;
	}

	.highcharts-data-table table {
		font-family: Verdana, sans-serif;
		border-collapse: collapse;
		border: 1px solid #EBEBEB;
		margin: 10px auto;
		text-align: center;
		width: 100%;
		max-width: 500px;
	}

	.highcharts-data-table caption {
		padding: 1em 0;
		font-size: 1.2em;
		color: #555;
	}

	.highcharts-data-table th {
		font-weight: 600;
		padding: 0.5em;
	}

	.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {
		padding: 0.5em;
	}

	.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {
		background: #f8f8f8;
	}

	.highcharts-data-table tr:hover {
		background: #f1f7ff;
	}
</style>